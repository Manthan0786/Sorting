{"ast":null,"code":"export default function Quicksort(array){//calling original array\nvar animation=[];if(array.length<=1){return;}quicksortHelper(array,0,array.length-1,animation);print(array);return animation;//returning animations for visualization\n}function quicksortHelper(arr,s,e,animation){if(s>=e){return;}var p=partition(arr,s,e,animation);//function to divide array in two parts\nquicksortHelper(arr,s,p-1,animation);quicksortHelper(arr,p+1,e,animation);}function partition(array,s,e,animation){var pivot=array[e];//select last element of array as pivot\nvar pindex=s;for(var i=s;i<e;i++){animation.push([\"comparison1\",i,e]);//Comparing value at i and e so push them to change their color\nanimation.push([\"comparison2\",i,e]);//Comparing them again to turn them into secondary color\nif(array[i]<=pivot){animation.push([\"comparison1\",i,pindex]);animation.push([\"swap\",i,array[pindex]]);animation.push([\"swap\",pindex,array[i]]);animation.push([\"comparison2\",i,pindex]);var _ref=[array[pindex],array[i]];array[i]=_ref[0];array[pindex]=_ref[1];pindex++;}}animation.push([\"comparison1\",e,pindex]);animation.push([\"swap\",e,array[pindex]]);animation.push([\"swap\",pindex,array[e]]);animation.push([\"comparison2\",e,pindex]);var _ref2=[array[e],array[pindex]];array[pindex]=_ref2[0];array[e]=_ref2[1];return pindex;}function print(array){console.log(array);}","map":{"version":3,"names":["Quicksort","array","animation","length","quicksortHelper","print","arr","s","e","p","partition","pivot","pindex","i","push","_ref","_ref2","console","log"],"sources":["C:/Users/18253/OneDrive/Documents/GitHub/Sorting-Visualizer/src/SortingAlgorithms/QuickSort.js"],"sourcesContent":["export default function Quicksort(array) {\r\n  //calling original array\r\n  const animation = [];\r\n  if (array.length <= 1) {\r\n    return;\r\n  }\r\n  quicksortHelper(array, 0, array.length - 1, animation);\r\n  print(array);\r\n  return animation; //returning animations for visualization\r\n}\r\n\r\nfunction quicksortHelper(arr, s, e, animation) {\r\n  if (s >= e) {\r\n    return;\r\n  }\r\n  let p = partition(arr, s, e, animation); //function to divide array in two parts\r\n  quicksortHelper(arr, s, p - 1, animation);\r\n  quicksortHelper(arr, p + 1, e, animation);\r\n}\r\n\r\nfunction partition(array, s, e, animation) {\r\n  var pivot = array[e]; //select last element of array as pivot\r\n  var pindex = s;\r\n  for (let i = s; i < e; i++) {\r\n    animation.push([\"comparison1\", i, e]); //Comparing value at i and e so push them to change their color\r\n    animation.push([\"comparison2\", i, e]); //Comparing them again to turn them into secondary color\r\n    if (array[i] <= pivot) {\r\n      animation.push([\"comparison1\", i, pindex]);\r\n      animation.push([\"swap\", i, array[pindex]]);\r\n      animation.push([\"swap\", pindex, array[i]]);\r\n      animation.push([\"comparison2\", i, pindex]);\r\n      [array[i], array[pindex]] = [array[pindex], array[i]];\r\n      pindex++;\r\n    }\r\n  }\r\n  animation.push([\"comparison1\", e, pindex]);\r\n  animation.push([\"swap\", e, array[pindex]]);\r\n  animation.push([\"swap\", pindex, array[e]]);\r\n  animation.push([\"comparison2\", e, pindex]);\r\n  [array[pindex], array[e]] = [array[e], array[pindex]];\r\n  return pindex;\r\n}\r\n\r\nfunction print(array) {\r\n  console.log(array);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}